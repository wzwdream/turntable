{"version":3,"sources":["turntable/turntable.jsx","canvasView/index.jsx","card/index.jsx","App.js","serviceWorker.js","index.js"],"names":["turntable","Turntable","options","Object","classCallCheck","this","canvas","context","startRadian","canBeClick","awards","selectedFood","food","text","maxLineWidth","wordList","split","tempLine","lineList","i","length","measureText","width","push","save","beginPath","fillStyle","arc","Math","PI","fill","restore","RadianGap","endRadian","moveTo","font","translate","cos","sin","rotate","getLineTextList","name","forEach","line","index","fillText","lineTo","closePath","e","canvasPostion","getBoundingClientRect","x","clientX","y","clientY","left","top","_this","canvasStyle","getAttribute","init","addEventListener","loc","windowToCanvas","isPointInPath","distance","distanceToStop","rotatePanel","setAttribute","concat","changeRadian","random","window","requestAnimationFrame","bind","middleDegrees","_this2","awardsToDegreesList","map","data","awardRadian","currentPrizeIndex","floor","drawPanel","drawPrizeBlock","drawButton","drawArrow","getTurntable","changeAwards","CanvasView","props","canvasElem","useRef","foodName","useEffect","foodList","current","getContext","clearRect","height","startRotate","changFood","react_default","a","createElement","ref","className","Card","_useState","useState","_useState2","slicedToArray","setFoodName","style","isShow","display","onClick","closeList","type","onChange","color","console","log","target","value","placeholder","addFood","item","key","level","deeteFood","App","possibleConstructorReturn","getPrototypeOf","call","React","createRef","state","selecteFood","meatFood","vegetablesFood","soupFood","assertThisInitialized","getList","setState","_this$state","len","parseInt","localStorage","setItem","JSON","stringify","_this$state2","splice","getItem","parse","Fragment","t","viewBox","version","xmlns","p-id","d","canvasView","src_card","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbb7bd4d.chunk.js","sourcesContent":["// 转盘类\nclass Turntable {\n  constructor(options) {\n    this.canvas = options.canvas\n    this.context = options.context\n    this.startRadian = 0\n    this.canBeClick = true\n    this.awards = options.awards\n    this.selectedFood = options.selectedFood\n    this.food = ''\n  }\n  getLineTextList(context, text, maxLineWidth) {\n    let wordList = text.split(''), tempLine = '', lineList = []\n    for (let i = 0; i < wordList.length; i++) {\n      if (context.measureText(tempLine).width >= maxLineWidth) {\n        lineList.push(tempLine)\n        maxLineWidth -= context.measureText(text[0]).width\n        tempLine = ''\n      }\n      tempLine += wordList[i]\n    }\n    lineList.push(tempLine)\n    return lineList\n  }\n  drawPanel() {\n    const context = this.context\n    const startRadian = this.startRadian\n    context.save()\n    context.beginPath()\n    context.fillStyle = '#FD6961'\n    context.arc(150, 150, 150, startRadian, Math.PI * 2 + startRadian, false)\n    context.fill()\n    context.restore()\n  }\n  // 奖品块\n  drawPrizeBlock() {\n    const context = this.context\n    const awards = this.awards\n    let startRadian = this.startRadian, RadianGap = Math.PI * 2 / awards.length, endRadian = startRadian + RadianGap\n    for (let i = 0; i < awards.length; i++) {\n      context.save()\n      context.beginPath()\n      context.fillStyle = i % 3 === 0 ? '#96fbc4' : i % 3 === 1 ? '#fddb92' : '#ace0f9'\n      context.moveTo(150, 150)\n      context.arc(150, 150, 140, startRadian, endRadian, false)\n      context.fill()\n      context.restore()\n\n      context.save()\n      context.fillStyle = '#000'\n      context.font = \"14px Arial\"\n      context.translate(\n        150 + Math.cos(startRadian + RadianGap / 2) * 140,\n        150 + Math.sin(startRadian + RadianGap / 2) * 140\n      )\n      context.rotate(startRadian + RadianGap / 2 + Math.PI / 2)\n      this.getLineTextList(context, awards[i].name, 70).forEach((line, index) => {\n        context.fillText(line, -context.measureText(line).width / 2, ++index * 25)\n      })\n      context.restore()\n\n      startRadian += RadianGap\n      endRadian += RadianGap\n    }\n  }\n  // 开始按钮\n  drawButton() {\n    const context = this.context\n    context.save()\n    context.beginPath()\n    context.fillStyle = '#FF0000'\n    context.arc(150, 150, 30, 0, Math.PI * 2, false)\n    context.fill()\n    context.restore()\n\n    context.save()\n    context.beginPath()\n    context.fillStyle = '#000'\n    context.font = '20px Arial'\n    context.translate(150, 150)\n    context.fillText('Start', -context.measureText('Start').width / 2, 8)\n    context.restore()\n  }\n  // 箭头\n  drawArrow() {\n    const context = this.context\n    context.save()\n    context.beginPath()\n    context.fillStyle = '#FF0000'\n    context.moveTo(140, 125)\n    context.lineTo(150, 100)\n    context.lineTo(160, 125)\n    context.closePath()\n    context.fill()\n    context.restore()\n  }\n  windowToCanvas(canvas, e) {\n    const canvasPostion = canvas.getBoundingClientRect(), x = e.clientX, y = e.clientY\n    return {\n      x: x - canvasPostion.left,\n      y: y - canvasPostion.top\n    }\n  };\n  // 开始转动\n  startRotate() {\n    const canvas = this.canvas\n    const context = this.context\n    const canvasStyle = canvas.getAttribute('style');\n    this.init()\n    canvas.addEventListener('mousedown', e => {\n      if (!this.canBeClick) return\n      this.canBeClick = false\n      let loc = this.windowToCanvas(canvas, e)\n      context.beginPath()\n      context.arc(150, 150, 30, 0, Math.PI * 2, false)\n      if (context.isPointInPath(loc.x, loc.y)) {\n        this.startRadian = 0\n        const distance = this.distanceToStop()\n        this.rotatePanel(distance)\n      }\n    })\n    canvas.addEventListener('mousemove', e => {\n      let loc = this.windowToCanvas(canvas, e)\n      context.beginPath()\n      context.arc(150, 150, 30, 0, Math.PI * 2, false)\n      if (context.isPointInPath(loc.x, loc.y)) {\n        canvas.setAttribute('style', `cursor: pointer;${canvasStyle}`)\n      } else {\n        canvas.setAttribute('style', canvasStyle)\n      }\n    })\n  }\n  rotatePanel(distance) {\n    let changeRadian = (distance - this.startRadian) * (100 / (Math.random() * 5000 + 4000) * 1.5)\n    this.startRadian += changeRadian\n    if (distance - this.startRadian <= 0.05) {\n      this.canBeClick = true;\n      this.selectedFood(this.food)\n      return\n    }\n    this.init()\n    window.requestAnimationFrame(this.rotatePanel.bind(this, distance));\n  }\n  distanceToStop() {\n    let middleDegrees = 0, distance = 0\n    const awardsToDegreesList = this.awards.map((data, index) => {\n      let awardRadian = (Math.PI * 2) / this.awards.length\n      return awardRadian * index + (awardRadian * (index + 1) - awardRadian * index) / 2\n    });\n    const currentPrizeIndex = Math.floor(Math.random() * this.awards.length)\n    this.food = currentPrizeIndex\n    middleDegrees = awardsToDegreesList[currentPrizeIndex];\n    distance = Math.PI * 3 / 2 - middleDegrees\n    distance = distance > 0 ? distance : Math.PI * 2 + distance\n    return distance + Math.PI * 10;\n  };\n  init() {\n    this.drawPanel()\n    this.drawPrizeBlock()\n    this.drawButton()\n    this.drawArrow()\n  }\n  changeAwards(awards) {\n    this.awards = awards\n  }\n}\n\nlet turntable\n\nconst getTurntable = (options) => {\n  if(turntable) {\n    turntable.changeAwards(options.awards)\n  } else {\n    turntable = new Turntable(options)\n  }\n  return turntable\n}\n\nexport {\n  getTurntable\n}","import React, { useRef, useEffect } from 'react'\nimport { getTurntable } from '../turntable/turntable'\nfunction CanvasView(props) {\n    const canvasElem = useRef(null)\n    const changFood = (foodList) => {\n        const canvas = canvasElem.current\n        const context = canvas.getContext('2d')\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        canvas.width = 300\n        canvas.height = 300\n        let turntable = getTurntable({ canvas: canvas, context: context, awards: foodList, selectedFood: selectedFood })\n        turntable.startRotate()\n    }\n    const selectedFood = (foodName) => {\n        props.selectedFood(foodName)\n    }\n\n    useEffect(() => {\n        changFood(props.foodList)\n    }, [props.foodList])\n    return (\n        <canvas ref={canvasElem} className='canvas'></canvas>\n    )\n}\n\nexport default CanvasView\n","import React, { useState } from 'react'\nimport './index.css'\nfunction Card(props) {\n    const [foodName, setFoodName ] = useState('')\n    const changeFood = () => {\n        props.addFood(foodName)\n        setFoodName('')\n    }\n    const colorChange = color => {\n        console.log(color.target.value)\n    }\n    return (\n        <div className=\"card\" style={!props.isShow ? { display: 'none' } : {}}>\n            <div className='cardTitle'>\n                <div className=\"tools\">\n                    <div className=\"circle\">\n                        <span className=\"red box1\"></span>\n                    </div>\n                    <div className=\"circle\">\n                        <span className=\"yellow box1\"></span>\n                    </div>\n                    <div className=\"circle\">\n                        <span className=\"green box1\"></span>\n                    </div>\n                </div>\n                <span className='titleText'>{props.food === 'meatFood' ? '荤菜' : props.food === 'vegetablesFood' ? '素菜' : '汤'}</span>\n                <span className='right_x' onClick={props.closeList}></span>\n            </div>\n            <div>\n                <input type=\"color\" onChange={colorChange} />\n            </div>\n            <div className=\"card__content\">\n                <div className='content_header'>\n                    <input placeholder=\"请输入你想要添加的菜名\" value={foodName} onChange={(e) => setFoodName(e.target.value)} type=\"text\" className=\"input\" />\n                    <button className='addBtn' onClick={changeFood}>添加菜品</button>\n                </div>\n                <div className='content_box'>\n                    {\n                        props.foodList.map((item, index) => {\n                            return <div className='contentRow' key={item.level}>\n                                <span>{item.level}、</span>\n                                <span>{item.name}</span>\n                                <span className='right_x' onClick={() => props.deeteFood(index)}></span>\n                            </div>\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React, { Component } from 'react'\nimport CanvasView from './canvasView/index.jsx'\nimport Card from './card'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.canvas = React.createRef()\n    this.state = {\n      food: 'meatFood',\n      isShow: false,\n      selecteFood: '',\n      foodList: []\n    }\n    this.meatFood = [\n      { level: '1', name: '回锅肉'},\n      { level: '2', name: '红烧肉'},\n      { level: '3', name: '苦瓜炒肉'}\n    ]\n    this.vegetablesFood = [\n      { level: '1', name: '凉拌黄瓜'},\n      { level: '2', name: '木耳菜'},\n      { level: '3', name: '西红柿炒鸡蛋'}\n    ]\n    this.soupFood = [\n      { level: '1', name: '紫菜蛋花汤'},\n      { level: '2', name: '西红柿鸡蛋汤'},\n      { level: '3', name: '黄瓜皮蛋汤'}\n    ]\n    this.closeList = this.closeList.bind(this)\n    this.selectedFood = this.selectedFood.bind(this)\n    this.changFood = this.changFood.bind(this)\n    this.addFood = this.addFood.bind(this)\n    this.deeteFood = this.deeteFood.bind(this)\n    this.getList = this.getList.bind(this)\n  }\n  changFood(food) {\n    const foodList = this[food]\n    this.setState({\n      food: food,\n      foodList: foodList\n    })\n  }\n  selectedFood(foodName) {\n    const food = this.state.food\n    this.setState({\n      selecteFood: this[food][foodName].name\n    })\n  }\n  // 添加菜品\n  addFood(foodName) {\n    if(foodName) {\n      const { foodList, food } = this.state\n      const len = foodList.length\n      foodList.push({\n        level: len === 0 ? '1' : 1 + parseInt(foodList[len - 1].level),\n        name: foodName\n      })\n      this[food] = foodList\n      this.changFood(food)\n      localStorage.setItem(food,JSON.stringify(foodList))\n    }\n  }\n  // 删除菜品\n  deeteFood(index) {\n    const { foodList, food } = this.state\n    foodList.splice(index, 1)\n    this[food] = foodList\n    this.changFood(food)\n    localStorage.setItem(food,JSON.stringify(foodList))\n  }\n  // 获取食物列表\n  getList() {\n    const meatFood = localStorage.getItem('meatFood')\n    const vegetablesFood = localStorage.getItem('vegetablesFood')\n    const soupFood = localStorage.getItem('soupFood')\n    meatFood ? this.meatFood = JSON.parse(localStorage.getItem('meatFood')) : localStorage.setItem('meatFood',JSON.stringify(this.meatFood))\n    vegetablesFood ? this.vegetablesFood = JSON.parse(localStorage.getItem('vegetablesFood')) : localStorage.setItem('vegetablesFood',JSON.stringify(this.vegetablesFood))\n    soupFood ? this.soupFood = JSON.parse(localStorage.getItem('soupFood')) : localStorage.setItem('soupFood',JSON.stringify(this.soupFood))\n    this.setState({\n      foodList: this.meatFood\n    })\n  }\n  closeList() {\n    this.setState({\n      isShow: !this.state.isShow,\n      foodList: JSON.parse(localStorage.getItem(this.state.food))\n    })\n  }\n\n  componentDidMount() {\n    this.getList()\n  }\n  render() {\n    return <div className='container'>\n      <div className='title'>\n        <span>{this.state.food === 'meatFood' ? '荤菜' : this.state.food === 'vegetablesFood' ? '素菜' : '汤'}</span>\n        <span className='addIcon' onClick={this.closeList}>\n          {\n            !this.state.isShow ? <>\n              <svg t=\"1660620041792\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4016\" width=\"32\" height=\"32\"><path d=\"M511.984 64C264.976 64 64 264.96 64 512.016 64 759.024 264.976 960 511.984 960 759.056 960 960 759.024 960 512.016 960 264.944 759.024 64 511.984 64z\" fill=\"#FFBD27\" p-id=\"4017\"></path><path d=\"M695.76 552.16h-143.616v143.536A40.224 40.224 0 0 1 512 735.936a40.256 40.256 0 0 1-40.128-40.24v-143.52h-143.632a40.208 40.208 0 1 1 0-80.4h143.632v-143.584a40.16 40.16 0 1 1 80.288 0v143.568h143.616a40.208 40.208 0 1 1 0 80.416z\" fill=\"#333333\" p-id=\"4018\"></path></svg>\n              添加\n            </>\n            : <span>取消</span>\n          }\n        </span>\n      </div>\n      <div className='btnGroup'>\n        <button className='btn' onClick={() => this.changFood('meatFood')}>荤菜</button>\n        <button className='btn' onClick={() => this.changFood('vegetablesFood')}>素菜</button>\n        <button className='btn' onClick={() => this.changFood('soupFood')}>汤</button>\n      </div>\n      <div className='selected'>\n        <span>选中的食物：{this.state.selecteFood}</span>\n      </div>\n      <div className='box'>\n        <CanvasView foodList={this.state.foodList} selectedFood={this.selectedFood} />\n      </div>\n      <Card isShow={this.state.isShow} food={this.state.food} foodList={this.state.foodList} addFood={this.addFood} deeteFood={this.deeteFood} closeList={this.closeList} />\n    </div>\n  }\n}\nexport default App","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}